// console.table(this.studentInfo.length);

// for(let i = 0; i < this.studentInfo.length; i++){
//   console.table(this.studentInfo[i]);
// }

// const renderStudentInfo = this.studentInfo[i].map((student) => {
//   const studentNameLetter = student.fullName.substr(0,1);
//   return `
//   <div class="selected-rm-mt">
    // <div class="letter-container">
    //   <span class="selected-letter">${studentNameLetter}</span>
    // </div>
    // <div class="selected-rm-mt-details">
    //   <h4 class="selected-rm-mt-name">${student.fullName}</h4>
    //   <p>@<span class="selected-rm-mt-st-number">${student.studentId}</span></p>
    // </div>
//   </div>
//   `;
// })
//

      // //inserting the student into the selected room mates container
      // ctrSelectedRoomMatesContainer.classList.add('show-room-mates');
      // ctrSelectedRoomMatesContainer.innerHTML = renderStudentInfo;


      //console.log("No result set found!");
      const resultError = `
        <li>
          No result set found!
        </li>
      `;
      ctrSearchResultsList.innerHTML = resultError;
      
      
      // div.innerHTML = `
      //   <div class="letter-container">
      //     <span class="selected-letter">${studentNameLetter}</span>
      //   </div>
      //   <div class="selected-rm-mt-details">
      //     <h4 class="selected-rm-mt-name">${student.fullName}</h4>
      //     <p>@<span class="selected-rm-mt-st-number">${student.studentId}</span></p>
      //   </div>
      // `;
      
      <div class="sign-in-input-wrapper">
        <input
          type="text"
          name="student-number"
          id="student-number"
          class="sign-in-input student-number"
          placeholder="Student Number"
          value="MH02A2022"
        />
      </div>

      function getLoginStatus(){
        const url = "./includes/login-status.inc.php";
        
        fetch(url)
        .then((res) => res.text())
        .then((res) => toggleImports(res));
      }

      function toggleImports(res){
        if(res == "1"){
          import * as utils from './utils.js';
          import * as settings from './settings.js';
          import * as searchbar from './searchbar0.js';
        }else{
          import * as utils from './utils.js';
          import * as settings from './settings.js';
          import * as searchbar from './ctr-panel.js';
        }
      }
      
      
      switch($execute){
        case '1':
          exit("5000");
        case '0':
          exit("5001");
        default:
          exit("sql-failed");
      }
      
      public function passInterface($studentIdSex, $object, $serviceMethod, $firstInterface, $secondInterface){
        
        switch ($studentIdSex) {
          case 'F':
            return $object->$serviceMethod($firstInterface);
            break;
            
          case 'M':
            return $object->$serviceMethod($secondInterface);
            break;
          
          default:
            exit("Failed to determine gender");
            break;
        }
      }
      
      
      // public function registerPreferredRoomMates($requestingStudentId, $roomMate1, $roomMate2){
      //   $sql = " INSERT INTO preferredRoomMatesFemaleHostel(studentId, roomMateId)
      //           VALUES (?,?), (?,?); ";
      //   $stmt = $this->connect()->prepare($sql);
      //   $execute = $stmt->execute([$requestingStudentId, $roomMate1, $requestingStudentId, $roomMate2]);   
      // 
      //   return $execute ? true : false;   
      // }
      // 


      if (this.studentsInfo.length == 2) {
        this.studentsInfo.shift();
        //removing it from the list of id's
        this.selectedStudents.shift();
      }
  
  
  
      checkNumberOfRoomMates(){
        
        const url = "./includes/modify-request.inc.php";
        let myNum = 0;
        
        fetch(url, {
        }).then((res) => res.text())
        .then((res) => {
          switch(res){
            case '1':
              this.roomMatesNo = 1;
              break;
            case '2':
              this.roomMatesNo = 2;
              break;
            case '3':
              this.roomMatesNo = 3;
              break;
            case '4':
              this.roomMatesNo = 4;
              break;          
            default:
              this.roomMatesNo = 0;
              break;
          }
        });
        
        fetch(url, {
        }).then((res) => res.text())
        .then((res) => this.roomMatesNo = parseInt(res));
        
      }